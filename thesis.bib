% Encoding: UTF-8

@PhdThesis{Rockai15,
  author     = {ROČKAI, Petr},
  title      = {Model Checking Software [online]},
  school     = {Masaryk University, Faculty of Informatics, Brno},
  year       = {2015 [cit. 2017-06-10]},
  type       = {Doctoral theses, Dissertations},
  supervisor = {Jiří Barnat},
  url        = {Available from WWW <http://is.muni.cz/th/139761/fi_d/>},
}

@Article{King76,
  author     = {King, James C.},
  title      = {Symbolic Execution and Program Testing},
  journal    = {Commun. ACM},
  year       = {1976},
  volume     = {19},
  number     = {7},
  pages      = {385--394},
  month      = jul,
  issn       = {0001-0782},
  acmid      = {360252},
  address    = {New York, NY, USA},
  doi        = {10.1145/360248.360252},
  issue_date = {July 1976},
  keywords   = {program debugging, program proving, program testing, program verification, symbolic execution, symbolic interpretation},
  numpages   = {10},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/360248.360252},
}

@InBook{Khurshid03,
  pages     = {553--568},
  title     = {Generalized Symbolic Execution for Model Checking and Testing},
  publisher = {Springer Berlin Heidelberg},
  year      = {2003},
  author    = {Khurshid, Sarfraz and P{\u{A}}s{\u{A}}reanu, Corina S. and Visser, Willem},
  editor    = {Garavel, Hubert and Hatcliff, John},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-36577-8},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems: 9th International Conference, TACAS 2003 Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2003 Warsaw, Poland, April 7--11, 2003 Proceedings},
  doi       = {10.1007/3-540-36577-X_40},
  url       = {http://dx.doi.org/10.1007/3-540-36577-X_40},
}

@InBook{Mrazek16,
  pages     = {208--213},
  title     = {SymDIVINE: Tool for Control-Explicit Data-Symbolic State Space Exploration},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Mr{\'a}zek, Jan and Bauch, Petr and Lauko, Henrich and Barnat, Ji{\v{r}}{\'i}},
  editor    = {Bo{\v{s}}na{\v{c}}ki, Dragan and Wijs, Anton},
  address   = {Cham},
  isbn      = {978-3-319-32582-8},
  booktitle = {Model Checking Software: 23rd International Symposium, SPIN 2016, Co-located with ETAPS 2016, Eindhoven, The Netherlands, April 7-8, 2016, Proceedings},
  doi       = {10.1007/978-3-319-32582-8_14},
  url       = {http://dx.doi.org/10.1007/978-3-319-32582-8_14},
}

@Book{Clarke99,
  title     = {Model checking},
  publisher = {MIT press},
  year      = {1999},
  author    = {Clarke, Edmund M and Grumberg, Orna and Peled, Doron},
}

@InProceedings{Barnat14,
  author    = {J. Barnat and P. Bauch and V. Havel},
  title     = {Model Checking Parallel Programs with Inputs},
  booktitle = {2014 22nd Euromicro International Conference on Parallel, Distributed, and Network-Based Processing},
  year      = {2014},
  pages     = {756-759},
  month     = {Feb},
  doi       = {10.1109/PDP.2014.44},
  issn      = {1066-6192},
  keywords  = {computability;parallel programming;program verification;temporal logic;LTL model checking;explicit approach;input variables;linear temporal logic;noncanonical representations;parallel program model checking;parallel program verification;quantified bit-vector formulae;quantifier-free satisfiability;state matching;state space representation;state space searching;symbolic approach;Concrete;Educational institutions;Input variables;Model checking;Protocols;Scalability;Standards;bit-vector theory;concurrency verification;ltl model checking;satisfiability modulo theories},
}

@InProceedings{Cousot79,
  author    = {Cousot, P{.} and Cousot, R{.}},
  title     = {Systematic design of program analysis frameworks},
  booktitle = {Conference Record of the Sixth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year      = {1979},
  pages     = {269--282},
  address   = {San Antonio, Texas},
  publisher = {ACM Press, New York, NY},
}

@InProceedings{Lattner04,
  author    = {Lattner, Chris and Adve, Vikram},
  title     = {LLVM: A Compilation Framework for Lifelong Program Analysis \& Transformation},
  booktitle = {Proceedings of the International Symposium on Code Generation and Optimization: Feedback-directed and Runtime Optimization},
  year      = {2004},
  series    = {CGO '04},
  pages     = {75--},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {977673},
  isbn      = {0-7695-2102-9},
  location  = {Palo Alto, California},
  url       = {http://dl.acm.org/citation.cfm?id=977395.977673},
}

@online{LLVM:web,
  author = {Chris Lattner},
  title  = {The \LLVM Compiler Infrastructure Project},
  url    = {http://llvm.org/},
  urldate = {2017-13-09},
  year = {2017}
}

@online{LLVM:langref,
  author = {LLVM Project},
  title  = {LLVM Language Reference Manual},
  url    = {http://llvm.org/docs/LangRef.html},
  urldate = {2017-13-09},
  year = {2017}
}

@Book{Winskel93,
  title     = {The Formal Semantics of Programming Languages: An Introduction},
  publisher = {MIT Press},
  year      = {1993},
  author    = {Winskel, Glynn},
  address   = {Cambridge, MA, USA},
  isbn      = {0-262-23169-7},
}

@Article{Plotkin04,
  author  = {Gordon D Plotkin},
  title   = {The origins of structural operational semantics},
  journal = {The Journal of Logic and Algebraic Programming},
  year    = {2004},
  volume  = {60},
  number  = {Supplement C},
  pages   = {3 - 15},
  issn    = {1567-8326},
  note    = {Structural Operational Semantics},
  doi     = {https://doi.org/10.1016/j.jlap.2004.03.009},
  url     = {http://www.sciencedirect.com/science/article/pii/S1567832604000268},
}

@Online{LLVM:opt,
  author  = {Chris Lattner},
  title   = {OPT \LLVM optimizer},
  year    = {2017},
  url     = {http://llvm.org/docs/CommandGuide/opt.html},
  urldate = {2017-23-09},
}

@Book{Baier08,
  title     = {Principles of Model Checking (Representation and Mind Series)},
  publisher = {The MIT Press},
  year      = {2008},
  author    = {Baier, Christel and Katoen, Joost-Pieter},
  isbn      = {026202649X, 9780262026499},
}

@Article{Clarke94,
  author     = {Clarke, Edmund M. and Grumberg, Orna and Long, David E.},
  title      = {Model Checking and Abstraction},
  journal    = {ACM Trans. Program. Lang. Syst.},
  year       = {1994},
  volume     = {16},
  number     = {5},
  pages      = {1512--1542},
  month      = sep,
  issn       = {0164-0925},
  acmid      = {186051},
  address    = {New York, NY, USA},
  doi        = {10.1145/186025.186051},
  issue_date = {Sept. 1994},
  keywords   = {abstract interpretation, binary decision diagrams (BDDs), model checking, temporal logic},
  numpages   = {31},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/186025.186051},
}

@Article{Divine17,
  author = {Zuzana Baranov\'{a} and Ji\v{r}\'{i} Barnat and Katarína Kejstová and Tadeáš Kučera and Henrich Lauko and Jan Mrázek and Petr Ročkai and Vladimír Štill},
  title  = {Model Checking of {C} and {C}++ with {DIVINE} 4},
  year   = {2017},
  note   = {Preliminary version.},
  url    = {https://divine.fi.muni.cz/2017/divine4},
}

@Article{RockaiCB17,
  author    = {Petr Rockai and Ivana Cern{\'{a}} and Jiri Barnat},
  title     = {DiVM: Model Checking with {LLVM} and Graph Memory},
  journal   = {CoRR},
  year      = {2017},
  volume    = {abs/1703.05341},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/RockaiCB17},
  timestamp = {Wed, 07 Jun 2017 14:42:01 +0200},
  url       = {http://arxiv.org/abs/1703.05341},
}

@MastersThesis{Still16,
  author     = {ŠTILL, Vladimír},
  title      = {LLVM Transformations for Model Checking [online]},
  school     = {Masarykova univerzita, Fakulta informatiky, Brno},
  year       = {2016 [cit. 2017-10-08]},
  type       = {Diplomová práce},
  supervisor = {Jiří Barnat},
  url        = {Dostupné z WWW <https://is.muni.cz/th/373979/fi_m/>},
}

@InProceedings{Still17,
  author    = {Vladimír Štill and Petr Ročkai and Jiří Barnat},
  title     = {{Using Off-the-Shelf Exception Support Components in C++ Verification}},
  booktitle = {IEEE International Conference on Software Quality, Reliability and Security (QRS)},
  year      = {2017},
  pages     = {54-64},
  month     = {July},
  doi       = {10.1109/QRS.2017.15},
  keywords  = {C++ languages, Libraries, Software, Standards, Testing, Tools, C++, Exceptions, Model Checking, Unwinder, divine, exceptions, red hat},
  page      = {https://divine.fi.muni.cz/2017/exceptions/},
  url       = {http://ieeexplore.ieee.org/document/8009908/},
}

@InBook{Bauch14,
  pages     = {47--59},
  title     = {LTL Model Checking of LLVM Bitcode with Symbolic Data},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Bauch, Petr and Havel, Vojt{\v{e}}ch and Barnat, Ji{\v{r}}{\'i}},
  editor    = {Hlin{\v{e}}n{\'y}, Petr and Dvo{\v{r}}{\'a}k, Zden{\v{e}}k and Jaro{\v{s}}, Ji{\v{r}}{\'i} and Kofro{\v{n}}, Jan and Ko{\v{r}}enek, Jan and Matula, Petr and Pala, Karel},
  address   = {Cham},
  isbn      = {978-3-319-14896-0},
  abstract  = {The correctness of parallel and reactive programs is often easier specified using formulae of temporal logics. Yet verifying that a system satisfies such specifications is more difficult than verifying safety properties: the recurrence of a specific program state has to be detected. This paper reports on the development of a generic framework for automatic verification of linear temporal logic specifications for programs in LLVM bitcode. Our method searches explicitly through all possible interleavings of parallel threads (control non-determinism) but represents symbolically the variable evaluations (data non-determinism), guided by the specification in order to prove the correctness. To evaluate the framework we compare our method with state-of-the-art tools on a set of unmodified C programs.},
  booktitle = {Mathematical and Engineering Methods in Computer Science: 9th International Doctoral Workshop, MEMICS 2014, Tel{\v{c}}, Czech Republic, October 17--19, 2014, Revised Selected Papers},
  doi       = {10.1007/978-3-319-14896-0_5},
  url       = {https://doi.org/10.1007/978-3-319-14896-0_5},
}

@InBook{Rockai13,
  pages     = {1--15},
  title     = {Improved State Space Reductions for LTL Model Checking of C and C++ Programs},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Ro{\v{c}}kai, Petr and Barnat, Ji{\v{r}}{\'i} and Brim, Lubo{\v{s}}},
  editor    = {Brat, Guillaume and Rungta, Neha and Venet, Arnaud},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-642-38088-4},
  abstract  = {In this paper, we present substantial improvements in efficiency of explicit-state LTL model checking of C {\&} C++ programs, building on [2], including improvements to state representation and to state space reduction techniques. The improved state representation allows to easily exploit symmetries in heap configurations of the program, especially in programs with interleaved heap allocations. Finally, we present a major improvement through a semi-dynamic proviso for partial-order reduction, based on eager local searches constrained through control-flow loop detection.},
  booktitle = {NASA Formal Methods: 5th International Symposium, NFM 2013, Moffett Field, CA, USA, May 14-16, 2013. Proceedings},
  doi       = {10.1007/978-3-642-38088-4_1},
  url       = {https://doi.org/10.1007/978-3-642-38088-4_1},
}

@MastersThesis{Havel14,
  author     = {HAVEL, Vojtěch},
  title      = {Generic Platform for Explicit-Symbolic Verification [online]},
  school     = {Masarykova univerzita, Fakulta informatiky, Brno},
  year       = {2014 [cit. 2017-10-14]},
  type       = {Diplomová práce},
  supervisor = {Jiří Barnat},
  url        = {Dostupné z WWW <http://is.muni.cz/th/359437/fi_m/>},
}

@Article{Cytron91,
  author     = {Cytron, Ron and Ferrante, Jeanne and Rosen, Barry K. and Wegman, Mark N. and Zadeck, F. Kenneth},
  title      = {Efficiently Computing Static Single Assignment Form and the Control Dependence Graph},
  journal    = {ACM Trans. Program. Lang. Syst.},
  year       = {1991},
  volume     = {13},
  number     = {4},
  pages      = {451--490},
  month      = oct,
  issn       = {0164-0925},
  acmid      = {115320},
  address    = {New York, NY, USA},
  doi        = {10.1145/115372.115320},
  issue_date = {Oct. 1991},
  keywords   = {control dependence, control flow graph, def-use chain, dominator, optimizing compilers},
  numpages   = {40},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/115372.115320},
}

@InProceedings{Hadarean14,
  author = {Liana Hadarean},
  title  = {An Efficient and Trustworthy Theory Solver for Bit-vectors in Satisfiability Modulo Theories},
  year   = {2014},
}

@InProceedings{duret04,
  author      = {Duret-Lutz, Alexandre and Poitrenaud, Denis},
  title       = {{SPOT: an Extensible Model Checking Library using Transition-based Generalized B{\"u}chi Automata}},
  booktitle   = {{12th IEEE/ACM International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems (MASCOTS '04)}},
  year        = {2004},
  pages       = {76-83},
  address     = {Volendam, Netherlands},
  month       = Oct,
  publisher   = {{IEEE Computer Society Press}},
  doi         = {10.1109/MASCOT.2004.1348184},
  hal_id      = {hal-01496158},
  hal_version = {v1},
  url         = {https://hal.archives-ouvertes.fr/hal-01496158},
}

@InBook{Vardi96,
  pages     = {238--266},
  title     = {An automata-theoretic approach to linear temporal logic},
  publisher = {Springer Berlin Heidelberg},
  year      = {1996},
  author    = {Vardi, Moshe Y.},
  editor    = {Moller, Faron and Birtwistle, Graham},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-49675-5},
  abstract  = {The automata-theoretic approach to linear temporal logic uses the theory of automata as a unifying paradigm  
for program specification, verification, and synthesis. Both programs and specifications are in essence descriptions   
of computations. These computations can be viewed as words over some alphabet. Thus, programs and specifications can   
be viewed as descriptions of languages over some alphabet. The automata-theoretic perspective considers the            
relationships between programs and their specifications as relationships between languages. By translating programs    
and specifications to automata, questions about programs and their specifications can be reduced to questions about    
automata. More specifically, questions such as satisfiability of specifications and correctness of programs with       
respect to their specifications can be reduced to questions such as nonemptiness and containment of automata.},
  booktitle = {Logics for Concurrency: Structure versus Automata},
  doi       = {10.1007/3-540-60915-6_6},
  url       = {https://doi.org/10.1007/3-540-60915-6_6},
}

@Comment{jabref-meta: databaseType:bibtex;}
